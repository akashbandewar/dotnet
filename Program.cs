/*
 Create a Class Employee with te following specifications

Properties
----------
string Name -> no blank names should be allowed
int EmpNo -> must be readonly and autogenerated
decimal Basic -> must be between some range
short DeptNo -> must be > 0

Methods
-------
decimal GetNetSalary() -> returns calculated net salary (Use any formula to get net salary based on Basic salary)


Create overloaded constructors to accept initial values for Employee obj
Employee o1 = new Employee("Amol",123465, 10);
Employee o2 = new Employee("Amol",123465);
Employee o3 = new Employee("Amol");
Employee o4 = new Employee();

EmpNo must be autogenerated ... i.e.
first object should automatically get EmpNo 1
second object should automatically get EmpNo 2
third object should automatically get EmpNo 3
...and so on...

Test Cases
Employee o1 = new Employee()
Employee o2 = new Employee()
Employee o3 = new Employee()
cw(o1.EmpNo)
cw(o2.EmpNo)
cw(o3.EmpNo)

cw(o3.EmpNo)
cw(o2.EmpNo)
cw(o1.EmpNo)
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Assignment1
{
    class Program
    {
        static void Main(string[] args)
        {
            Employee o1 = new Employee("Amol", 123465, 10);
            Employee o2 = new Employee("Amol", 123465);
            Employee o3 = new Employee("Amol");
            Employee o4 = new Employee();

            /*Employee o1 = new Employee();
            Employee o2 = new Employee();
            Employee o3 = new Employee();*/

            Console.WriteLine((o1.EmpNo));
            Console.WriteLine((o2.EmpNo));
            Console.WriteLine((o3.EmpNo));
            Console.WriteLine((o3.EmpNo));
            Console.WriteLine((o2.EmpNo));
            Console.WriteLine((o1.EmpNo));
            Console.ReadLine();
        }
    }

    class Employee
    {
        private string name;
        private int empNo;
        private decimal basic;
        private short deptNo;
        static int empNum;
        #region property

        private string Name
        {
            set
            {
                if (value == "")
                    name = "Default Name";
                else
                    name = value;
            }

            get
            {
                return name;
            }
        }
        
        public int EmpNo
        {
            get
            {
                return empNo;
            }
        }

        public decimal Basic
        {
            set
            {
                if (value >= 1000 && value <= 99999)
                    basic = value;
                else
                    basic = 1000;
            }

            get
            {
                return basic;
            }
        }

        public short DeptNo
        {
            set
            {
                if (value < 1)
                    deptNo = 1;
                else
                    deptNo = value;
            }

            get
            {
                return deptNo;
            }
        }
        #endregion properties

        #region constructor

        public Employee(string Name = "default name", decimal Basic = 1000, short DeptNo = 1)
        {
            empNum++;
            this.empNo = empNum;
            this.Name = Name;
            this.Basic = Basic;
            this.DeptNo = DeptNo;
        }
        #endregion constructor

        #region methods
        public decimal GetNetSalary()
        {
            decimal sal = Basic * 1.1M;
            return sal;
        }
        #endregion methods
    }
}
